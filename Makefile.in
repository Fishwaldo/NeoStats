# Makefile for NeoStats
include Makefile.inc 

EXTRA_LDFLAGS = `curl/mycurl-config --libs`

PROGS = neostats cronchk makeconf
CONF = neostats.motd
DOCS = doc/FAQ doc/USERMAN README BUGS AUTHORS COPYING CREDITS TODO \
		ChangeLog doc/README.* dl/modules.txt RELNOTES doc/old/*
DOCS_PROGS = doc/read-faq doc/read-userman
DATA = data/tlds.nfo

PCRE_OBJS = pcre/pcre.o pcre/get.o pcre/study.o
ADNS_OBJS =	adns/check.o adns/event.o adns/general.o adns/parse.o adns/query.o \
		adns/reply.o adns/setup.o adns/transmit.o adns/types.o
KEEPER_OBJS= keeper/kp_cache.o keeper/kp_dir.o keeper/kp_enum.o keeper/kp_get.o \
		keeper/kp_iface.o keeper/kp_recur.o keeper/kp_set.o keeper/kp_sort.o \
		keeper/kp_util.o
OBJS= ${SRCS:.c=.o} @sqlsrvbuild@
SRCS =	dns.c chans.c dotconf.c services.c main.c sock.c conf.c ircd.c timer.c \
		users.c ns_help.c dl.c list.c hash.c server.c keeper.c log.c misc.c \
		support.c ircstring.c commands.c transfer.c exclude.c match.c \
		@IRCD_FILES_SRC@
IRCDSRC=Ultimate.c Unreal.c hybrid7.c neoircd.c Bahamut.c \
		Ircu.c mystic.c QuantumIRCd.c liquidircd.c Viagra.c
IRCDINC=Ultimate.h Unreal.h hybrid7.h neoircd.h Bahamut.h \
		Ircu.h mystic.h QuantumIRCd.h liquidircd.h Viagra.h

INCLUDES = config.h dl.h dotconf.h hash.h list.h stats.h \
		conf.h log.h support.h ircstring.h events.h numeric.h pcre.h \
		transfer.h
COREINCS = dns.h services.h sock.h ircd.h exclude.h \
		ns_help.h timer.h users.h chans.h server.h
BUILDFILES = configure config.sub config.guess *.in \
		dl/Makefile install-sh Config makeconf cronchk

DISTFILES = $(INCLUDES) $(COREINCS) $(SRCS) $(IRCDSRC) $(IRCDINC) \
		$(BUILDFILES) $(DATA) $(DOCS) $(DOCS_PROGS) $(CONF)	
 
SUBDIRS = doc doc/old data logs tools 
DISTLIBS = adns pcre curl sqlsrv keeper
DISTMOD = cs extauth hostserv loveserv ms statserv template

.c.o:
	$(CC) $(NEOINCLUDES) $(CFLAGS) -c $< 

all: @buildsqlsrv@ libadns libkeeper libpcre libcurl.a neostats modules utils 

modules:
	(cd dl; $(MAKE) $@)

libadns:
	(cd adns; $(MAKE))

libkeeper:
	(cd keeper; $(MAKE))

libpcre:
	(cd pcre; $(MAKE))

libcurl.a:
	(cd curl; $(MAKE))

sqlsrvlib:
	(cd sqlsrv; $(MAKE))

utils:
	(cd tools; $(MAKE) $@)

clean:
	(cd dl; $(MAKE) $@)
	(cd adns; $(MAKE) $@)
	(cd keeper; $(MAKE) $@)
	(cd tools; $(MAKE) $@)
	(cd pcre; $(MAKE) $@)
	(cd curl; $(MAKE) $@)
	(cd sqlsrv; $(MAKE) $@)
	/bin/rm -rf *.o neostats *.cache Makefile config.h  Makefile.inc *.log *.a

neostats: $(OBJS)
	$(CC) $(LDFLAGS) $(OBJS) $(ADNS_OBJS) $(KEEPER_OBJS) $(PCRE_OBJS) curl/libcurl.a $(EXTRA_LDFLAGS) -o $@

install: neostats modules
	@echo "Installing ..."
	@rm -rf @prefix@/dl/cs.so
	@rm -rf @prefix@/dl/ms.so
	@rm -rf @prefix@/dl/SecureServ.so
	@rm -rf @prefix@/include/*.h
	$(INSTALL) -m 755 -d @prefix@
	$(INSTALL) -m 755 -d @prefix@/dl
	$(INSTALL) -m 755 -d @prefix@/include
	$(INSTALL) -m 755 -d @prefix@/doc
	$(INSTALL) -m 755 -d @prefix@/data
	$(INSTALL) -m 750 -d @prefix@/logs
	$(INSTALL) -m 755 $(PROGS) @prefix@
	$(INSTALL) -m 644 $(CONF) @prefix@
	$(INSTALL) -m 644 $(DOCS) @prefix@/doc
	$(INSTALL) -m 755 $(DOCS_PROGS) @prefix@/doc
	$(INSTALL) -m 644 $(DATA) @prefix@/data
	$(INSTALL) -m 644 $(INCLUDES) @prefix@/include
	$(INSTALL) -m 644 @IRCD_FILES_INC@ @prefix@/include
	(cd adns; $(MAKE) $@)
	(cd sqlsrv; $(MAKE) $@)
	(cd dl; $(MAKE) $@)
	(cd tools; $(MAKE) $@)
	@echo "Done."

dist: 	
	@echo -n "Creating Directories"
	@-rm -rf $(DISTDIR)
	@echo -n "."
	@mkdir $(DISTDIR)
	@echo -n "."
	@mkdir $(DISTDIR)/dl
	@echo -n "."
	@for subdir in $(SUBDIRS); do \
		echo -n "."; \
		mkdir $(DISTDIR)/$$subdir; \
		chmod 777 $(DISTDIR)/$$subdir; \
	done
	@echo "Done"
	@echo -n "Copying Core Distribution files"
	@for file in $(DISTFILES); do \
		echo -n "."; \
		cp -pr $$file $(DISTDIR)/$$file; \
	done
	@rm -rf $(DISTDIR)/config.h
	@rm -rf $(DISTDIR)/configure.in
	@echo "Done"
	@echo "Copying Library Distribution files"
	@for subdir in $(DISTLIBS); do \
		mkdir $(DISTDIR)/$$subdir; \
		chmod 777 $(DISTDIR)/$$subdir; \
		(cd $$subdir && $(MAKE) dist DISTDIR=../$(DISTDIR)/$$subdir && cd ..) || exit 1; \
	done
	@echo "Done"
	@echo "Copying Tools Distribution files"
	@(cd tools && $(MAKE) dist DISTDIR=../$(DISTDIR)/tools && cd ..) || exit 1;
	@echo "Done"
	@echo "Copying Module Distribution files"
	@for mod in $(DISTMOD); do \
		mkdir $(DISTDIR)/dl/$$mod; \
		(cd dl/$$mod && $(MAKE) dist DISTDIR=../../$(DISTDIR)/dl/$$mod && cd ../..) || exit 1; \
	done
	@echo "Done"
	@tar -czf $(DISTDIR).tar.gz $(DISTDIR)/*
#	@rm -rf $(DISTDIR)
	@echo "Tar file $(DISTDIR).tar.gz created. Freshmeat time!"

# Catch any changes in compilation options at the top of this file
$(OBJS): Makefile

dns.o: dns.c stats.h adns/adns.h list.h hash.h config.h log.h
chans.o: chans.c stats.h adns/adns.h list.h hash.h config.h dl.h log.h
dotconf.o: dotconf.c dotconf.h
services.o: services.c stats.h adns/adns.h list.h hash.h config.h dl.h log.h
main.o: main.c stats.h adns/adns.h list.h hash.h config.h dl.h conf.h log.h
sock.o: sock.c stats.h adns/adns.h list.h hash.h config.h dl.h conf.h log.h
conf.o: conf.c stats.h adns/adns.h list.h hash.h config.h dotconf.h conf.h dl.h log.h
ircd.o: ircd.c stats.h adns/adns.h list.h hash.h config.h dl.h log.h
timer.o: timer.c stats.h adns/adns.h list.h hash.h config.h dl.h log.h
users.o: users.c stats.h adns/adns.h list.h hash.h config.h dl.h log.h
ns_help.o: ns_help.c stats.h adns/adns.h list.h hash.h config.h 
dl.o: dl.c dl.h hash.h stats.h adns/adns.h list.h config.h log.h
list.o: list.c list.h
hash.o: hash.c hash.h
server.o: server.c stats.h adns/adns.h list.h hash.h config.h log.h
keeper.o: keeper.c stats.h adns/adns.h list.h hash.h config.h keeper/keeper.h conf.h log.h
log.o: log.c stats.h adns/adns.h list.h hash.h config.h conf.h log.h
transfer.o: transfer.c transfer.h stats.h list.h
exclude.o: exclude.c exclude.h