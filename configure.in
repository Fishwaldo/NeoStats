dnl Process this file with autoconf to produce a configure script.
AC_INIT(dl.c)
AC_CONFIG_HEADER(config.h)
PACKAGE=NeoStats
AC_DEFINE(MAJOR, 2)
AC_DEFINE(MINOR, 5)
AC_DEFINE(REV, 1)
VERSION=2.5.1
AC_PREFIX_DEFAULT(~/NeoStats)
CFLAGS="$CFLAGS -O2"

dnl Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL 

AC_PROG_CPP
AC_PROG_RANLIB

dnl Checks for libraries.
dnl Replace `main' with a function in -ldl:
AC_CHECK_LIB(dl, dlopen)



AC_CHECK_FUNCS(poll)
ADNS_C_GETFUNC(socket,socket)
ADNS_C_GETFUNC(inet_ntoa,nsl)

AC_CHECK_FUNC(backtrace, AC_DEFINE(HAVE_BACKTRACE, 1, 'backtrace function available'))
dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(sys/time.h unistd.h db.h)

ADNS_C_GETFUNC(inet_aton,resolv,[
 LIBS="-lresolv $LIBS";
 AC_MSG_WARN([inet_aton is in libresolv, urgh.  Must use -lresolv.])
])

DPKG_CACHED_TRY_COMPILE(inlines,dpkg_cv_c_inline,,
 [} inline int foo (int x) {],
 AC_MSG_RESULT(yes)
 AC_DEFINE(HAVE_INLINE),
 AC_MSG_RESULT(no))

ADNS_C_GCCATTRIB
AC_CHECK_HEADERS(sys/select.h)

AC_CHECK_FUNC(pthread_mutex_lock, AC_DEFINE(HAVE_PTHREAD_MUTEX))

AC_MSG_CHECKING(for INADDR_LOOPBACK)
AC_CACHE_VAL(adns_cv_decl_inaddrloopback,[
 AC_TRY_COMPILE([
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
 ],[
  INADDR_LOOPBACK;
 ],
 adns_cv_decl_inaddrloopback=yes,
 adns_cv_decl_inaddrloopback=no)])
if test "$adns_cv_decl_inaddrloopback" = yes; then
 AC_MSG_RESULT(found)
else
 AC_MSG_RESULT([not in standard headers, urgh...])
 AC_CHECK_HEADER(rpc/types.h,[
  AC_DEFINE(HAVEUSE_RPCTYPES_H)
 ],[
  AC_MSG_ERROR([cannot find INADDR_LOOPBACK or rpc/types.h])
 ])
fi


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_FNMATCH
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(regcomp select socket strdup fcloseall)

dnl check if we are running with Debug....
AC_MSG_CHECKING(Whether to Enable Debuging...)
AC_ARG_ENABLE(debug,
[ --enable-debug - Enable Debuging],
[ case "$enableval" in
  yes)
	AC_DEFINE(DEBUG, 1, 'Enable Debugging')
	CFLAGS="$CFLAGS -ggdb -Wall"
	AC_MSG_RESULT(yes - Watch your Log Files)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
  esac],
AC_MSG_RESULT(no)
)

dnl check to see if we should enable Unreal IRCD Support
AC_MSG_CHECKING(Whether to Enable Unreal IRCD Support...)
AC_ARG_ENABLE(unreal, [ --enable-unreal - enable Unreal IRCD Support],
[ case "$enableval" in
  yes)  
	AC_DEFINE(UNREAL, 1, 'Enable Unreal Support')
	IRCD_FILES_SRC="Unreal.c"
	IRCD_FILES_OBJS="Unreal.o"
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
esac],
AC_MSG_RESULT(no))

dnl check to see if we should enable Ultimate IRCD Support
AC_MSG_CHECKING(Whether to Enable Ultimate 2.x.x IRCD Support...)
AC_ARG_ENABLE(ultimate2, [ --enable-ultimate2 - enable Ultimate 2.x.x IRCD Support],
[ case "$enableval" in
  yes)  
	AC_DEFINE(ULTIMATE, 1, 'Enable Ultimate Support')
	IRCD_FILES_SRC="Ultimate.c"
	IRCD_FILES_OBJS="Ultimate.o"
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
esac],
AC_MSG_RESULT(no)
)
AC_MSG_CHECKING(Whether to Enable Ultimate 3.x.x IRCD Support...)
AC_ARG_ENABLE(ultimate3, [ --enable-ultimate3 - enable Ultimate 3.x.x IRCD Support],
[ case "$enableval" in
  yes)  
	AC_DEFINE(ULTIMATE, 1, 'Enable Ultimate 2.x.x Support')
	AC_DEFINE(ULTIMATE3, 1, "Enable Ultimate 3.x.x Support')
	IRCD_FILES_SRC="Ultimate.c"
	IRCD_FILES_OBJS="Ultimate.o"
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
esac],
AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(Whether to Enable Hybrid 7.x.x IRCD Support...)
AC_ARG_ENABLE(hybrid7, [ --enable-hybrid7 - enable Hybrid7 IRCD Support],
[ case "$enableval" in
  yes)  
	AC_DEFINE(HYBRID7, 1, 'Enable hybrid7 IRCD support')
	IRCD_FILES_SRC="hybrid7.c"
	IRCD_FILES_OBJS="hybrid7.o"
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
esac],
AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(Whether to Enable NeoIRCd IRCD Support...)
AC_ARG_ENABLE(neoircd, [ --enable-neoircd - enable NeoIRCd IRCD Support],
[ case "$enableval" in
  yes)  
	AC_DEFINE(NEOIRCD, 1, 'Enable NeoIRCd IRCD support')
	IRCD_FILES_SRC="neoircd.c"
	IRCD_FILES_OBJS="neoircd.o"
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
esac],
AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(A compatible IRCD is specified)
case "$IRCD_FILES_SRC" in 
   "Ultimate.c")
	AC_MSG_RESULT(yes)
	;;
   "Unreal.c")
	AC_MSG_RESULT(yes)
	;;
   "hybrid7.c")
	AC_MSG_RESULT(yes)
	echo "*******************************************************"
	echo "Hybrid7 Support is very very experimental at the moment"
	echo "Please report any bugs, or Desyncs to:"
	echo "http://www.neostats.net/boards"
	echo "*******************************************************"
	;;
   "neoircd.c")
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	AC_MSG_ERROR('You must define a IRCD to use. See ./configure --help for more information')
	;;
esac


dnl check to see what type of authentication to use
AC_MSG_CHECKING(What type of Authentication to use...)
AC_ARG_ENABLE(auth, [ --enable-auth=TYPE - what type of Authentication to use. See Readme File],
[ case "$enableval" in
  sr)  
	AC_DEFINE(EXTAUTH, 1, 'Use IRCD Authentication')
	EXTAUTH_SRC="$EXTAUTH_SRC serviceroots.c"
	EXTAUTH_OBJS="$EXTAUTH_OBJS serviceroots.o"
	AC_MSG_RESULT(External)
	MODULES="$MODULES extauth"
	;;
  *)
	AC_DEFINE(IRCDAUTH)
	AC_MSG_RESULT(IRCD)
	;;
esac],
AC_DEFINE(IRCDAUTH)
AC_MSG_RESULT(IRCD)
)

AC_MSG_CHECKING(To Enable Raw command?)
AC_ARG_ENABLE(raw, [ --enable-raw - Enable Raw command],
[ case "$enableval" in
  yes)
	AC_DEFINE(USE_RAW, 1, 'Use Raw command')
	AC_MSG_RESULT(yes)
	;;
  *)
	AC_MSG_RESULT(no)
	;;
esac],
AC_MSG_RESULT(no)
)

dnl Lets see what Modules to Compile
AC_MSG_CHECKING(Any other modules to compile?)
AC_ARG_ENABLE(modules, [ --enable-modules="MODULES" - space seperated list of modules to compile],
AC_MSG_RESULT($enableval) 
MODULES="$MODULES $enableval",
AC_MSG_RESULT(none)
)
configtool=no
AC_MSG_CHECKING(Enable Building of ConfigTool?)
AC_ARG_ENABLE(configtool,
[--enable-configtool - Endable building of the configtool program (Needs X windows)],
[if test "$enableval" = yes; then configtool=yes; else configtool=no; fi])

if test "$configtool" = yes; then
   AC_MSG_RESULT(Yes.... Testing for Dependancies!) 
   AC_PATH_PROG(GTK_CONFIG, gtk-config, no)
   if test "$GTK_CONFIG" = no; then
      AC_MSG_WARN([Cannot find GTK+, configtool will not be built])
   else
      AC_MSG_CHECKING([GTK version (need at least 1.2.0)])

      gtk_version=`$GTK_CONFIG --version`
      gtk_maj_ver=`echo $gtk_version | cut -f 1 -d .`
      gtk_min_ver=`echo $gtk_version | cut -f 2 -d .`
      gtk_sub_ver=`echo $gtk_version | cut -f 3 -d .`

      AC_MSG_RESULT(${gtk_maj_ver}.${gtk_min_ver}.${gtk_sub_ver})

      if test $gtk_maj_ver -lt 1 -o $gtk_min_ver -lt 2; then
	 configtool=no
	 AC_MSG_WARN([GTK+ version is too old, configtool will not be built])
      fi
   fi
else
   AC_MSG_RESULT(no)
fi

if test "$configtool" = yes; then
   build_configtool=configtool
else
   build_configtool=
fi

AC_SUBST(build_configtool)


AC_MSG_CHECKING(Your Current Bank Balance)
AC_MSG_RESULT(Thats Impressive!!!)
AC_MSG_CHECKING(The Modules that will be compiled)
AC_MSG_RESULT($MODULES)


AC_SUBST(IRCD_FILES_SRC)
AC_SUBST(IRCD_FILES_OBJS)
AC_SUBST(MODULES)
AC_SUBST(LIBS)
AC_SUBST(EXTAUTH_SRC)
AC_SUBST(EXTAUTH_OBJS)
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)
AC_CONFIG_HEADER(adns/config.h)
AC_OUTPUT(Makefile.inc Makefile tools/Makefile)
echo "(*----------------------------------------------------------*)"
echo "(| Important Instructions                                   |)"
echo "(*----------------------------------------------------------*)"
echo "(| if you just typed ./configure and didnt read the README  |)"
echo "(| NeoStats may not be configured correctly                 |)"
echo "(| We Suggest you at least type ./configure --help          |)"
echo "(| To see available options and read the Readme file for    |)"
echo "(| further information on that option                       |)"
echo "(*----------------------------------------------------------*)"
echo "(| For Support please visit:                                |)"
echo "(|    IRC:                   /server irc.irc-chat.net       |)"
echo "(|                           /server irc.neostats.net       |)"
echo "(|                                   #neostats channel      |)"
echo "(|    WWW:   http://www.neostats.net/cgi-bin/forum.cgi      |)"
echo "(|           http://www.sf.net/projects/neostats/           |)"
echo "(*----------------------------------------------------------*)"
echo "(| Now that Configure is complete, just type 'make' to      |)"
echo "(| compile the program                                      |)"
echo "(*----------------------------------------------------------*)"
read -p "Press Enter Key to Read the Release Notes"
clear
more ./RelNotes.txt