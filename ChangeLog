===============================================================================
NeoStats 3.x ChangeLog 
Anything we add/remove/fix/change is in here (even our rants)
Fish (F), Mark (M)
===============================================================================
* NeoStats * Version 3.0.genesis
 - Initial import of language support files. (M)
 - Change init_bot so that in client mode, module commands and settings are
   just added to the main bot. (M)
 - Begin adding a client protocol so that NeoStats can connect as a normal
   client rather than a server. (M)
 - Split unreal and ultimate protocol files into ultimate2, ultimate3, unreal31 
   and unreal32 for easier maintainance. (M)
 - Begin moving common mode defines to neostats.h from ircd specific files. (M)
 - Channel key and limit modes now have explicit support rather than being 
   included in general mode parameters list. (M)
 - Begin improved mode handling. Protocol module tables are parsed at boot into
   a faster core lookup table. The speedup is based on the fact that more often
   than not we lookup a mode char so we can index on this char rather than loop
   through every mode multiple times looking for a match. (M)
 - Import libtools wrappers for dynamic module support (F)
 - Full AutoConf Support on the way. Core Compiles. Modules Dont yet (F)
 - Remove hard coded protocol/feature references in StatServ and HostServ. 
   These are depreciated by the new soft protocol design and will use the new
   protocol/feature references in the ModuleInfo struct where required. (M)
 - Begin replacing old #define GOTFEATURE with new FEATURE and PROTOCOL systems
   as part of soft protocol support. Currently it is still "hard" coded but 
   will eventually move to the soft support system (M)
 - Replace spart_cmd with part_bot_from_chan function (M)
 - Add BANDUMP command to display ban table (M)
 - Remove debugtochannel and optimise code path of functions using it (M)
 - Remove ssjoin_cmd and sjoin_cmd functions. All channel joins must use
   join_bot_to_chan. (M)
 - Remove snewnick_cmd function. All new users must be introduced using 
   init_bot (M)
 - Change is_pub_chan so it returns TRUE for a public channel. (M)
 - Begin IRCD "soft" protocol/feature design. (M)
 - Remove old CMODE_CH_xxx and CMODE_FL_xxx defines that new sjoin system makes
   redundant. (M)
 - Host OS value now saved by configure for use in version reporting and for 
   bug reporting. (M)
 - Add support for NOQUIT so that NeoStats can delete users from disconnected
   servers without requiring individual QUITs (M)
 - Add support to recurse server list for SQUIT so that NeoStats can delete 
   leaves of hubs which SQUIT (M)
 - Tidy exported include files (via make install) to the currently required 
   minimum. (M)
 - Added DEBUGMOD option which allows selective debugging of a module so we can
   limit debug output to a single module when required. (M)
 - Command line option -v now reports a full IRCd string in the version so we
   no longer need the flag "help" text. (M)
   this is now handled by IRCdAuth. (M)
 - Removed -l (log level) command line option. This is now an inline "SET" 
   option which saved and restored via config system. (M)
   this is now handled by IRCdAuth. (M)
 - Removed umode levels from IRCd protocol files and associated core code since 
   this is now handled by IRCdAuth. (M)
 - ExtAuth: Added support for an access list system such that the master 
   service root can manage users who have access to NeoStats and their 
   individual levels. This removes the need for the older SERVICE_ROOTS options
   which have been superseded with the new SERVICEROOT option for master root
   and the access list maintained via IRC (M)
 - Authentication modules are now optional again. A single service root is 
   required in the config file using a new SERVICEROOT option which follows the 
   format of the old SERVICE_ROOTS option but is singlular and renamed to 
   prevent upgraders relying on this working. This is used by the core to 
   provide at least one user with NeoStats access regardless of authentication 
   systems. (M)
 - Add dlog function to handle debug messages. nlog is now purely for normal 
   logging purposes (M)
 - Add DEBUGCHAN setting for sending debug messages to channel and DEBUGTOCHAN
   setting to enable/disable it's use. (M)
 - Reorganised me and config structures. (M)
 - Debug mode is now a SET option rather than a command. (M)
 - Add set command to NeoStats to set user mode for service bots. 
   /msg neostats set SERVICEBOTUMODE <mode>. default is defined in the IRCd 
   specific services_umode string. (M)
 - Add set command to NeoStats to set channel mode for service bots. 
   /msg neostats set SERVICEBOTCMODE <mode>. default is defined in the IRCd 
   specific services_cmode string. (M)
 - Add services_cmode string to IRCd protocol files to set default channel
   modes for service bot that reflect IRCd capabilities to simplify sjoin 
   code and module code for joins. (M)
 - New module auth system to support auth systems other than the 2.5 extauth.
   The core is now unable to provide any authentication and an auth module must 
   be loaded. The old IRCd umode based auth is now a loadable module so is 
   optional. Where a module wants to have local control over authentication,
   the 2.5.15+ ModAuth function has been renamed to ModLocalAuth to distinguish
   it from auth only modules. New config load module options have been added
   to support auth modules which require a slightly different style to standard
   modules. templateauth provides the example code for auth modules. (M)
 - configure now checks IRCD first so that if this required option is missed 
   the user will be told immediately rather than after all other checks. (M)
 - Build process updates so that at configure time we only do what we need to 
   and reduce the number of config.h files we need to maintain. (M)
 - New memory allocation wrappers functions scalloc, srealloc and sfree. (M)
 - Add SET VERSIONSCAN option to core for CTCP version scanning. (M)
 - StatServ: Optimise database save to further reduce code required and get 
   back a little CPU. (M)
 - StatServ: Adjust exclusions so that counts are accurate. The exclusions 
   produced cases where the current channel count was greater than the network 
   record! (M)
 - IRCd version suffix now handled by configure rather than code. (M)
 - Introduce new debug.log system to store all current messages and debug info
   to avoid corrupting main system logs when in debug mode and allow users to 
   submit this file for support rather than multiple ones from modules plus 
   core. (M)
 - StatServ: reorganised code so stats code is encapsulated from module 
   specifics and introduced new burst request system during init. (M)
 - Begin implementing "burst" request interface for modules to get current
   user/channel/server etc lists. (M)
 - Homogenize init error messages. (M)
 - Update core support functions to use new run level system to determine 
   current module removing the need for modules to pass their module pointer 
   when adding bots/timers/socks etc. (M)
 - Replace old segv_module system with new run level system. (M)
 - Keeper subdirs are now subdirs of main data dir. (M)
 - ConnectServ: reverse colour define so default is disabled. (M)
 - Core modules now use core config loading system (M)
 - All socket code now in socks.c for easier upgrade (M)
 - Early support for module semi auto config designed to perform loading of 
   module config settings or set defaults without the module having to code it. 
   Due to the need for custom set values, we will likely have to call the core 
   function from the module rather than perform automatically at load time. (M)
 - Command processor set routine broken into helper functions for easier
   maintainance (M)
 - Rewritten command processor to use new command structure (M)
 - Moved signal code to signals.c/h (M)
 - New structure for passing to commands and events (M)
 - Removed NeoStats logs command since it is useless with multiple logs. 
   Possibly look onto a LogView module sometime in the future if there is 
   demand for this facility (M)
 - Begin adding return value processing for commands so core can handle common
   errors such as syntax error (M)
 - HostServ: removed old database format support (M)
 - Event system updates. Change type to int enum for faster processing. Some 
   events renamed to be closer to irc commands so meaning is more obvious for 
   module programmers and to assist the move from module_functions to events. 
   Enum type protects event system at compile time. (M)
 - seperate auth system from main core so we can add new auth hooks (M)
 - send_sjoin bug fix where user has no modes (M)
 - Segfault reports are now directed to segfault.log rather than the main log
   files for easier submission (M)
 - subsystem structures now maintain a module pointer to lookup names rather
   than copies of the string. We can now lookup modules via a quick pointer
   compare rather than string compare and can access module information without
   addition function overheads. (M)
 - Modules must pass their module handle to the core for accessing bots/timers
   etc, once all interfaces use this system, try to "automate" the handle using
   some form of current_module/runlevel within the core (M)
 - Core and modules now share bot init code (M)
 - Updated bot interface to use a new bot_info structure (M)
 - ExtAuth: remove old format support (M)
 - Added instrinsic bot commands for ABOUT, CREDITS, VERSION (M)
 - Logging scope is now automatic rather than requiring a specific option (M)
 - Module support calls to access timers/bots/sockets etc must now pass 
   correctly typed function pointers rather than using core symbol lookups (M)
 - dl.c/h split into files dedicated to a part of the module sytstem e.g. 
   bots.c. dl.c/h now becomes our wrapper library for handling libdl plus 
   future DLL and static support (M)
 - Added some extra fields to channel, user and server structures for future 
   use (M)
 - Point of no return. Legacy 2.5 systems are now broken. Some 2.5.15 compliant
   systems will still work but all module backward compatibility has been 
   stripped. 
 - All core module changelogs moved to docs/old. Future core module updates 
   will be included in the main NeoStats changelog (M)
 - Remove module API hacks (M)
 - Remove legacy stats.h, API is now exported via neostats.h only (M)
 - Depreciate support for __module_functions and associated ModuleFunction 
   overheads, version 3.0 will send information to modules via events only (M)
 - Remove 2.5.5 and lower module compatibility systems (M)
 - New source tree layout implemented (M)
 - Begin version 3.0 development (M)

===============================================================================
For older versions (1.x and 2.x) see Changelog.old
===============================================================================
