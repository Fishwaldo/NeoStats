===============================================================================
NeoStats 3.x ChangeLog 
Anything we add/remove/fix/change is in here (even our rants)
Fish (F), Mark (M)
===============================================================================
* NeoStats * Version 3.0.genesis
 - configure now checks IRCD first so that if this required option is missed 
   the user will be told immediately rather than after all other checks.
 - Build process updates so that at configure time we only do what we need to 
   and reduce the number of config.h files we need to maintain.
 - New memory allocation wrappers functions scalloc, srealloc and sfree.
 - Add SET VERSIONSCAN option to core for CTCP version scanning.
 - StatServ: Optimise database save to further reduce code required and get 
   back a little CPU.
 - StatServ: Adjust exclusions so that counts are accurate. The exclusions 
   produced cases where the current channel count was greater than the network 
   record! (M)
 - IRCd version suffix now handled by configure rather than code. (M)
 - Introduce new debug.log system to store all current messages and debug info
   to avoid corrupting main system logs when in debug mode and allow users to 
   submit this file for support rather than multiple ones from modules plus 
   core. (M)
 - StatServ: reorganised code so stats code is encapsulated from module 
   specifics and introduced new burst request system during init. (M)
 - Begin implementing "burst" request interface for modules to get current
   user/channel/server etc lists. (M)
 - Homogenize init error messages. (M)
 - Update core support functions to use new run level system to determine 
   current module removing the need for modules to pass their module pointer 
   when adding bots/timers/socks etc. (M)
 - Replace old segv_module system with new run level system. (M)
 - Keeper subdirs are now subdirs of main data dir. (M)
 - ConnectServ: reverse colour define so default is disabled. (M)
 - Core modules now use core config loading system (M)
 - All socket code now in socks.c for easier upgrade (M)
 - Early support for module semi auto config designed to perform loading of 
   module config settings or set defaults without the module having to code it. 
   Due to the need for custom set values, we will likely have to call the core 
   function from the module rather than perform automatically at load time. (M)
 - Command processor set routine broken into helper functions for easier
   maintainance (M)
 - Rewritten command processor to use new command structure (M)
 - Moved signal code to signals.c/h (M)
 - New structure for passing to commands and events (M)
 - Removed NeoStats logs command since it is useless with multiple logs. 
   Possibly look onto a LogView module sometime in the future if there is 
   demand for this facility (M)
 - Begin adding return value processing for commands so core can handle common
   errors such as syntax error (M)
 - HostServ: removed old database format support (M)
 - Event system updates. Change type to int enum for faster processing. Some 
   events renamed to be closer to irc commands so meaning is more obvious for 
   module programmers and to assist the move from module_functions to events. 
   Enum type protects event system at compile time. (M)
 - seperate auth system from main core so we can add new auth hooks (M)
 - send_sjoin bug fix where user has no modes (M)
 - Segfault reports are now directed to segfault.log rather than the main log
   files for easier submission (M)
 - subsystem structures now maintain a module pointer to lookup names rather
   than copies of the string. We can now lookup modules via a quick pointer
   compare rather than string compare and can access module information without
   addition function overheads. (M)
 - Modules must pass their module handle to the core for accessing bots/timers
   etc, once all interfaces use this system, try to "automate" the handle using
   some form of current_module/runlevel within the core (M)
 - Core and modules now share bot init code (M)
 - Updated bot interface to use a new bot_info structure (M)
 - ExtAuth: remove old format support (M)
 - Added instrinsic bot commands for ABOUT, CREDITS, VERSION (M)
 - Logging scope is now automatic rather than requiring a specific option (M)
 - Module support calls to access timers/bots/sockets etc must now pass 
   correctly typed function pointers rather than using core symbol lookups (M)
 - dl.c/h split into files dedicated to a part of the module sytstem e.g. 
   bots.c. dl.c/h now becomes our wrapper library for handling libdl plus 
   future DLL and static support (M)
 - Added some extra fields to channel, user and server structures for future 
   use (M)
 - Point of no return. Legacy 2.5 systems are now broken. Some 2.5.15 compliant
   systems will still work but all module backward compatibility has been 
   stripped. 
 - All core module changelogs moved to docs/old. Future core module updates 
   will be included in the main NeoStats changelog (M)
 - Remove module API hacks (M)
 - Remove legacy stats.h, API is now exported via neostats.h only (M)
 - Depreciate support for __module_functions and associated ModuleFunction 
   overheads, version 3.0 will send information to modules via events only (M)
 - Remove 2.5.5 and lower module compatibility systems (M)
 - New source tree layout implemented (M)
 - Begin version 3.0 development (M)

===============================================================================
For older versions (1.x and 2.x) see Changelog.old
===============================================================================
