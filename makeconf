#!/bin/sh
# makeconf v 1.0 2001/02/11 15:21:32 Shmad

TIME=`date +"%H:%M:%S %Z"`
DATE=`date +"%a, %b %e %Y"`
STATSCONF="neostats.cfg"
SERVNAME="stats.somenet.net"
COMMENT="NeoStats 2.5 IRC Statistical Server!"
LINKPORT="6667"
LINKSERVER="127.0.0.1"
LINKPASS="LinkPass"
NETNAME="SomeNet-IRC"
NEOHOST="NeoStats.Net"
NEOUSER="Neo"
NEOCHAN="#services"
NEOCONN="10"
NEOREC="10"
BINDIP="127.0.0.1"

# these are so I can use stuff like $1 without it replacing it...like by
# using $dlrsgn$uno for $1
dlrsgn="$"
uno="1"
dos="2"

# remove the temp file if it exists
rm -f mkconf.tmp

# make a quick script for replacing one line with another

cat > repl_str << __EOF__
sed -e "s@^$dlrsgn$uno\(.*\)@$dlrsgn$dos" $STATSCONF > mkconf.tmp
cp mkconf.tmp $STATSCONF
rm mkconf.tmp
__EOF__

# mark repl_str as an executable
chmod +x repl_str
rm -f repl_str
# Checking out how to specify not to make a new line with the current OS
c=''
n=''
2>/dev/null
if [ "`eval echo -n 'a'`" = "-n a" ]; then
	c='\c'
else
	n='-n'
fi

# If Settings exist, load the info, otherwise tell them to run configure.

if [ -r config.h ]; then
	echo "Lets configure this baby.. "
else if [ -r include/config.h ]; then
	echo "Lets configure this baby.. "
else
	echo ""
	echo "It appears you haven't ran configure yet!"
	echo "You probably should read the README file too"
	echo ""
	echo "Type ./configure (If you need help read the README before asking us)"
        echo "To enable Service Roots run configure with --enable-auth=sr"
	echo ""
	exit 1
fi
fi
CONF=$STATSCONF

if [ -r "$CONF" ]; then
	echo "$STATSCONF found"
	echo " "
	echo "   You already have ran 'makeconf'  I really would suggest"
	echo "against running it again since you WILL LOSE all the data"
	echo "that is already in your config file!"
	echo ""
	echo "This script is just for creating one. If you want to recreate"
	echo "your config file, type 'recreate'."
	echo $n " [exit] -> $c"
	read cc

	if [ "$cc" != "recreate" ]; then
		echo " "
		echo "   OK, do you want to edit $STATSCONF using an editor?"
		echo "If so, specify the editor you want to use. Otherwise,"
		echo "type 'exit'."
		EDITFND="not found"

                if [ -r /usr/bin/pico ]; then
                        EDITFND="pico"
                fi

                if [ -r /usr/bin/joe ]; then
                        EDITFND="joe"
                fi

		if [ -r /usr/bin/vi ]; then
			EDITFND="vi"
		fi

		if [ -r /usr/bin/vim ]; then
			EDITFND="vim"
		fi

		while [ "c" = "c" ]; do
			echo $n " [$EDITFND] -> $c"
			read EDITOR

			if [ -z "$EDITOR" ]; then
				EDITOR="$EDITFND"
			fi

			if [ "$EDITOR" = "exit" ]; then
				echo "Have a nice day."
				exit 1
			fi

			if [ -f $EDITOR ]; then
				$EDITOR $CONF
				exit 1
			fi

			if [ -f /usr/bin/$EDITOR ]; then
				/usr/bin/$EDITOR $CONF
				exit 1
			fi

			echo "   Editor not found. Specify a valid editor or"
			echo "type 'exit' to quit this script."
		done

	fi

	mv $CONF "$CONF.saved"
	rm $CONF
	echo "$STATSCONF has been renamed to ircd.conf.saved"
else
	echo "$STATSCONF is not found. (good)"
fi

clear
echo ""
echo "Thanks for Choosing NeoStats!"
echo ""
echo "*----------------------------------------*"
echo "| Welcome to the $STATSCONF generator. |"
echo "*----------------------------------------*"
echo " "
echo "What will your server name be? (ie: $SERVNAME)"
echo $n " [$SERVNAME] -> $c"
read cc
if [ ! -z "$cc" ]; then
	SERVNAME="$cc"
fi

echo " "
echo "What is your IRC server's IP? (ie: $LINKSERVER)"
echo $n " [$LINKSERVER] -> $c"
read cc
if [ ! -z "$cc" ]; then
        LINKSERVER="$cc"
fi

echo " "
echo "What is the IRCd's Link port? (ie: 7890)"
echo $n " [$LINKPORT] -> $c"
read cc
if [ ! -z "$cc" ]; then
        LINKPORT="$cc"
fi

echo " "
echo "What is the IRCd's Link password for stats? (ie: bleh)"
echo $n " [$LINKPASS] -> $c"
read cc
if [ ! -z "$cc" ]; then
         LINKPASS="$cc"
fi

echo " "
echo "NeoStats Server comment?"
echo $n " [$COMMENT] -> $c"
read cc
if [ ! -z "$cc" ]; then
	COMMENT="$cc"
fi

echo " "
echo "Network name? (refer to your networks file.  ie: CyberChat-IRC)"
echo $n " [$NETNAME] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NETNAME="$cc"
fi

echo " "
echo "The host NeoStats is connecting from, most people use services.theirnetwork.net"
echo $n " [$NEOHOST] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOHOST="$cc"
fi

echo " "
echo "NeoStats User? (This is the part before @yourhost.net)"
echo $n " [$NEOUSER] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOUSER="$cc"
fi

echo " "
echo "What channel should NeoStats join on IRC?"
echo $n " [$NEOCHAN] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOCHAN="$cc"
fi

echo " "
echo "Time in seconds we wait before attempting to reconnect to the server on a split?"
echo $n " [$NEOCONN] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOCONN="$cc"
fi

echo " "
echo "What IP should NeoStats Bind to? (ie: $BINDIP)"
echo "This is optional. See neostats.cfg for more information"
echo $n " [$BINDIP] -> $c"
read cc
if [ ! -z "$cc" ]; then
        BINDIP="$cc"
fi

cat > $CONF << __EOF__
##################################################
## Configuration file for NeoStats
## Created:  $DATE - $TIME
## NeoStats (c) 1999-2003 The NeoStats Group.
## Web: http://www.NeoStats.Net
## File Revision: 2.5.0-25
##################################################

##############################
# IRCd Linking Configuration #
##############################

# The server name that we appear as.
SERVER_NAME $SERVNAME

# The port to connect to.
SERVER_PORT $LINKPORT

# Hostname we are connecting to
CONNECT_TO $LINKSERVER

# Password we send in order to connect.
CONNECT_PASS $LINKPASS

# Infoline Displayed in /links for this server
SERVER_INFOLINE "$COMMENT"

# Your network name (fx: irc.irc-chat.net put irc-chat, if unknown refer to your network file)
STATSERV_NETNAME $NETNAME



##########################
# NeoStats Configuration #
##########################

# This is the Apparent Host that NeoStats is connecting from.. Some people
# like to make it the same as your Services host (eg, services.irc-chat.net) 
NEOSTAT_HOST $NEOHOST

# This is the User that NeoStats uses (the part before the @host)
NEOSTAT_USER $NEOUSER

#The Services Channel to Join Initially
SERVICES_CHAN $NEOCHAN

#We should load right?
#Comment out this line to allow your NeoStats to load RTFM!
NO_LOAD

# Should we send privmsg's or notice's?
# Comment this out for NOTICE's, otherwise
# leave it alone.
#WANT_PRIVMSG

# Time in seconds that we wait before attempting
# to reconnect to the server.
RECONNECT_TIME $NEOCONN

# Should we restrict NeoStats and StatServ to opers use only?
# Comment this out to allow users to use StatServ functions
#ONLY_OPERS

# IP address to Bind to. 
# This IP address should not be localhost (127.0.0.1)
# Do we want NeoStats to bind to a particular IP Address?
# Comment out if you do not want this
#BINDTO $BINDIP


########################
# HTML OUTPUT SETTINGS #
########################

#This section has been moved into the backend Database. Load up Statserv,
#and type /msg statserv help set


#####################################
# Module Configurations and Loading #
#####################################

# Now for each Module we want to load at boot time, we specify the following
# this loads the Spam Module
#LOAD_MODULE spam

# this is the StatServ Module
#LOAD_MODULE statserv

#This is a new module.  LoveServ, send a rose, hug, kiss, chocolate, etc to that
# Special IRC Somebody. :D
#LOAD_MODULE loveserv

# The HostServ module provides vhost services
#LOAD_MODULE hostserv

# MoraleServ. A fun module to cheer people up.
#LOAD_MODULE ms

# ConnectServ will watch all connections to the network and can report them
# to the services channel. It can also watch and report Nickname changes.
#LOAD_MODULE cs

# For all other modules, just add them above in the format:
#LOAD_MODULE modulename



############################
# STATSERV CONFIG FOLLOWS: #
############################

#This section has been moved into the Backend Database. Load up Statserv and
#type /msg statserv help set.


#######################
# NeoStats ROOT users #
#######################

# If you configured and compiled with --enable-auth=sr please edit
# This section and add your nicks Remove the #'s as well.
# Accepts two formats. A Nickname, or a Full <nick>!<ident>@<host> format.

#SERVICE_ROOTS Shmad!?Shmad@Coder.NeoStats.net
#SERVICE_ROOTS ^Enigma^!*@*.au
#SERVICE_ROOTS Fish!?Fish@*.dynam.ac



###############################################################################
## End of Configuration                                                      ##
###############################################################################


__EOF__



# Make it so ONLY the one who created the conf can read or write.
chmod 700 $STATSCONF


                echo ""
                echo "*------------------------------------------------*"
		echo "| Thanks for choosing NeoStats. Have a nice day. |"
		echo "| Please check neostats.cfg for any errors.      |"
                echo "*------------------------------------------------*"
		echo "| Also make sure modules are compiled and in the |"
		echo "| neostats.cfg properly for them to work :)      |"
		echo "*------------------------------------------------*"
		echo "| If you configured with --enable-auth=sr        |"
		echo "| Edit neostats.cfg and edit the proper section  |"
		echo "| to enable Service ROOTS.                       |"
		echo "*------------------------------------------------*"
		echo "| **I CANT STRESS THIS ENOUGH, PLEASE READ THE** |"
		echo "| **README FILE BEFORE ASKING FOR HELP!!!!!   ** |"
		echo "*------------------------------------------------*"
		echo "| This file was updated by M (mark@ctcp.net)     |"
		echo "*------------------------------------------------*
                echo ""
		exit 1
