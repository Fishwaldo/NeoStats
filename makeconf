#!/bin/sh
# makeconf v 1.0 2001/02/11 15:21:32 Shmad - Borrowed from UnrealIRCd

TIME=`date +"%H:%M:%S %Z"`
DATE=`date +"%a, %b %e %Y"`
STATSCONF="neostats.cfg"
SERVNAME="stats.somenet.net"
COMMENT="NeoStats 2.5B1 IRC Statistical Server!"
LINKPORT="6667"
LINKSERVER="127.0.0.1"
LINKPASS="LinkPass"
NETNAME="SomeNet-IRC"
NEOHOST="NeoStats.Net"
NEOUSER="Neo"
NEOCHAN="#services"
NEOCONN="10"
NEOWRITE="HTML_STATS"
NEOHTML="/home/shmad/public_html/stats.html"
NEOLAG="60"

# these are so I can use stuff like $1 without it replacing it...like by
# using $dlrsgn$uno for $1
dlrsgn="$"
uno="1"
dos="2"

# remove the temp file if it exists
rm -f mkconf.tmp

# make a quick script for replacing one line with another

cat > repl_str << __EOF__
sed -e "s@^$dlrsgn$uno\(.*\)@$dlrsgn$dos" $STATSCONF > mkconf.tmp
cp mkconf.tmp $STATSCONF
rm mkconf.tmp
__EOF__

# mark repl_str as an executable
chmod +x repl_str
rm -f repl_str
# Checking out how to specify not to make a new line with the current OS
c=''
n=''
2>/dev/null
if [ "`eval echo -n 'a'`" = "-n a" ]; then
	c='\c'
else
	n='-n'
fi

# If Settings exist, load the info, otherwise tell them to run configure.

if [ -r config.h ]; then
	echo "Here we go.. "
else if [ -r include/config.h ]; then
	echo "Here we go.. "
else
	echo "Hmm, you need to run configure first!"
	echo "Type ./configure"
        echo "To enable Service Roots run configure with --enable-auth==sr"
	echo "If you have run configure, make sure you are in the directory"
	echo "you ran it from."
	exit 1
fi
fi
CONF=$STATSCONF

if [ -r "$CONF" ]; then
	echo "$STATSCONF found"
	echo " "
	echo "   I don't suggest running this with the conf file already"
	echo "existing, since you will lose all the data in your conf file."
	echo "This script is just for creating one. If you want to recreate"
	echo "a conf file, type 'recreate'."
	echo $n " [exit] -> $c"
	read cc

	if [ "$cc" != "recreate" ]; then
		echo " "
		echo "   OK, do you want to edit $STATSCONF using an editor?"
		echo "If so, specify the editor you want to use. Otherwise,"
		echo "type 'exit'."
		EDITFND="not found"

                if [ -r /usr/bin/pico ]; then
                        EDITFND="pico"
                fi

                if [ -r /usr/bin/joe ]; then
                        EDITFND="joe"
                fi

		if [ -r /usr/bin/vi ]; then
			EDITFND="vi"
		fi

		if [ -r /usr/bin/vim ]; then
			EDITFND="vim"
		fi

		while [ "c" = "c" ]; do
			echo $n " [$EDITFND] -> $c"
			read EDITOR

			if [ -z "$EDITOR" ]; then
				EDITOR="$EDITFND"
			fi

			if [ "$EDITOR" = "exit" ]; then
				echo "Have a nice day."
				exit 1
			fi

			if [ -f $EDITOR ]; then
				$EDITOR $CONF
				exit 1
			fi

			if [ -f /usr/bin/$EDITOR ]; then
				/usr/bin/$EDITOR $CONF
				exit 1
			fi

			echo "   Editor not found. Specify a valid editor or"
			echo "type 'exit' to quit this script."
		done

	fi

	mv $CONF "$CONF.saved"
	rm $CONF
	echo "$STATSCONF has been renamed to ircd.conf.saved"
else
	echo "$STATSCONF is not found. (good)"
fi

clear
echo "*-------------------------------------*"
echo "| Welcome to the $STATSCONF generator. |"
echo "*-------------------------------------*"
echo " "
echo "What will your server name be? (ie: $SERVNAME)"
echo $n " [$SERVNAME] -> $c"
read cc
if [ ! -z "$cc" ]; then
	SERVNAME="$cc"
fi

echo " "
echo "What is your IRC server's IP? (ie: $LINKSERVER)"
echo $n " [$LINKSERVER] -> $c"
read cc
if [ ! -z "$cc" ]; then
        LINKSERVER="$cc"
fi

echo " "
echo "What is the IRCd's Link port? (ie: 7890)"
echo $n " [$LINKPORT] -> $c"
read cc
if [ ! -z "$cc" ]; then
        LINKPORT="$cc"
fi

echo " "
echo "What is the IRCd's Link password for stats? (ie: bleh)"
echo $n " [$LINKPASS] -> $c"
read cc
if [ ! -z "$cc" ]; then
         LINKPASS="$cc"
fi

echo " "
echo "NeoStats Server comment?"
echo $n " [$COMMENT] -> $c"
read cc
if [ ! -z "$cc" ]; then
	COMMENT="$cc"
fi

echo " "
echo "Network name? (refer to your networks file.  ie: CyberChat-IRC)"
echo $n " [$NETNAME] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NETNAME="$cc"
fi

echo " "
echo "The host NeoStats is connecting from, most people use services.theirnetwork.net"
echo $n " [$NEOHOST] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOHOST="$cc"
fi

echo " "
echo "NeoStats User? (This is the part before @yourhost.net)"
echo $n " [$NEOUSER] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOUSER="$cc"
fi

echo " "
echo "What channel should NeoStats join on IRC?"
echo $n " [$NEOCHAN] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOCHAN="$cc"
fi

echo " "
echo "Time in seconds we wait before attempting to reconnect to the server on a split?"
echo $n " [$NEOCONN] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOCONN="$cc"
fi

echo " "
echo "Should NeoStats write HTML stats?  Put: HTML_STATS to enable or #HTML_STATS to disable"
echo $n " [$NEOWRITE] -> $c"
read cc
if [ ! -z "$cc" ]; then
	NEOWRITE="$cc"
fi

echo " "
echo "Please put the path & Filename to output HTML Statistics to"
echo $n " [$NEOHTML] -> $c"
read cc
if [ ! -z "$cc" ]; then
	NEOHTML="$cc"
fi

echo " "
echo "The number of seconds a server can be lagged before NeoStats considers it to be lagged"
echo $n " [$NEOLAG] -> $c"
read cc
if [ ! -z "$cc" ]; then
        NEOLAG="$cc"
fi


cat > $CONF << __EOF__
##################################################
## Configuration file for NeoStats
## Created:  $DATE - $TIME
## NeoStats (c) 1999-2002 The NeoStats Group.
## support@neostats.net
## Web: http://www.NeoStats.Net
## File Revision: 2.5.0-24
##################################################

##############################
# IRCd Linking Configuration #
##############################

# The server name that we appear as.
SERVER_NAME $SERVNAME

# The port to connect to.
SERVER_PORT $LINKPORT

# Hostname we are connecting to
CONNECT_TO $LINKSERVER

# Password we send in order to connect.
CONNECT_PASS $LINKPASS

# Infoline Displayed in /links for this server
SERVER_INFOLINE "$COMMENT"

# Your network name (fx: irc.irc-chat.net put irc-chat, if unknown refer to your network file)
STATSERV_NETNAME $NETNAME


##########################
# NeoStats Configuration #
##########################

# This is the Apparent Host that NeoStats is connecting from.. Some people
# like to make it the same as your Services host (eg, services.irc-chat.net) 
NEOSTAT_HOST $NEOHOST

# This is the User that NeoStats uses (the part before the @host)
NEOSTAT_USER $NEOUSER

#The Services Channel to Join Initially
SERVICES_CHAN $NEOCHAN

# Should we send privmsg's or notice's?
# Comment this out for NOTICE's, otherwise
# leave it alone.
#WANT_PRIVMSG

# Time in seconds that we wait before attempting
# to reconnect to the server.
RECONNECT_TIME $NEOCONN

########################
# HTML OUTPUT SETTINGS #
########################

# Should NeoStats write out HTML statistics?  Comment this out to disable
# HTML_STATS to enable or #HTML_STATS to disable.
$NEOWRITE

# Path to NeoStats HTML Output file.  INCLUDE FILENAME!! This is required.
# Example: /home/shmad/public_html/stats.html
HTML_PATH $NEOHTML


#####################################
# Module Configurations and Loading #
#####################################

# Now for each Module we want to load at boot time, we specify the following
# this loads the Spam Module
LOAD_MODULE spam

# This is a demo Module, called Version.. All it does is append a reply to /version <NeoStats server
name>
LOAD_MODULE version

# this is the StatServ Module
LOAD_MODULE statserv

#This is the NetInfo Module, All it does is join users based on TLDs to specific channels.
# IF you use this make sure to edit data/niconfig.db
#LOAD_MODULE netinfo

#This is a new module.  LoveServ, send a rose, hug, kiss, chocolate, etc to that
# Special IRC Somebody. :D
#LOAD_MODULE loveserv

# Some Modules require there own configuration information.. Here are some
# Configuration options that are usefull for the Modules that come with
# NeoStats

# For all other modules, just add them above in the format:
# LOAD_MODULE modulename



############################
# STATSERV CONFIG FOLLOWS: #
############################

# This is the nickname that StatServ uses, if not specified, defaults to StatServ
#STATSERV_NICK StatServ

# This is the User portion that StatServ uses, if not specified, it uses
# whatever NeoStats is configured to use
#STATSERV_USER Stats


# This is the Host that StatServ appears to come from, if not specified, it 
# uses whatever NeoStats is configured to use
#STATSERV_HOST stats.irc-chat.net

# This is used to specified the number of seconds a Server is tolerated
# before it is considered Laged. A non value, or value of 0, disables Lag
# Notifications
LAG_NOTICE $NEOLAG


############################
# ICQSERV CONFIG FOLLOWS:  #
############################

# This is the nickname that IcqServ uses, if not specified, defaults to
# ICQserv
#ICQSERV_NICK IcqServ

# This is the User portion that IcqServ uses, if not specified, it uses
# whatever NeoStats is configured to use
#ICQSERV_USER Stats

# This is the Host that IcqServ appears to come from, if not specified, it
# uses whatever NeoStats is configured to use
#ICQSERV_HOST my.stats.irc.net

ICQSERV_UIN 000000001
ICQSERV_PASSWORD blahblah
ICQSERV_SERVER 205.188.179.42


#######################
# NeoStats ROOT users #
#######################

# If you configured and compiled with --enable-auth==sr please edit
# This section and add your nicks Remove the #'s as well.

#SERVICE_ROOTS Shmad
#SERVICE_ROOTS ^Enigma^
#SERVICE_ROOTS Fish
#SERVICE_ROOTS_AUTH 1



###############################################################################
## End of Configuration                                                      ##
###############################################################################


__EOF__



# Make it so ONLY the one who created the conf can read or write.
chmod 700 $STATSCONF


                echo ""
                echo "*------------------------------------------------*"
		echo "| Thanks for choosing NeoStats. Have a nice day. |"
		echo "| Please check neostats.cfg for any errors.      |"
                echo "*------------------------------------------------*"
		echo "| Also make sure modules are compiled and in the |"
		echo "| neostats.cfg properly for them to work :)      |"
		echo "*------------------------------------------------*"
		echo "| If you configured with --enable-auth==sr       |"
		echo "| Edit neostats.cfg and edit the proper section  |"
		echo "| to enable Service ROOTS.                       |"
		echo "*------------------------------------------------*"
                echo ""
		exit 1
